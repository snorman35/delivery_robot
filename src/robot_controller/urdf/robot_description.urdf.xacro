<?xml version="1.0"?>
<robot name="robot_base" xmlns:xacro="http://ros.org/wiki/xacro">

  <xacro:include filename="$(find robot_controller)/xacro/inertia_calc.xacro"/>

  <xacro:property name="robot_width" value="0.57375" />
  <xacro:property name="robot_length" value="0.5032"/>
  <xacro:property name="robot_height" value="0.2238375"/>

  <xacro:property name="body_width" value="0.4016" />
  <xacro:property name="body_length" value="0.5032"/>
  <xacro:property name="body_height" value="0.08255"/>
  <xacro:property name="body_mass" value="11"/>

  <xacro:property name="wheel_radius" value="0.066675"/>
  <xacro:property name="wheel_width" value="0.05715"/>
  <xacro:property name="wheelbase" value="0.4826"/>
  <xacro:property name="wheel_mass" value="0.45"/>

  <xacro:macro name="robot_wheel" params="prefix number">
    <link name="${prefix}_wheel_${number}">
      <inertial>
        <origin rpy="${pi/2} 0.0 0.0"/>
        <mass value="${wheel_mass}"/>
        <xacro:cylinder_inertia m="${wheel_mass}" r="${wheel_radius}" h="${wheel_width}"/>
      </inertial>
      <visual name="${prefix}_wheel_${number}_visual">
        <origin rpy="${pi/2} 0.0 0.0"/>
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
        </geometry>
        <material name="blue">
          <color rgba="0.0 0.0 1.0 1.0"/>
        </material>
      </visual>
      <collision>
        <origin rpy="${pi/2} 0.0 0.0"/>
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
        </geometry>
        <surface>
          <friction>
            <ode>
            
              <mu1>1.0</mu1>
              <mu2>1.0</mu2>
              
              <slip1>0.0</slip1>
              <slip2>0.0</slip2>
            </ode>
          </friction>
          <contact>
            <ode>
              <kp>1000000.0</kp> <!-- kp and kd for rubber -->
              <kd>100.0</kd>
              <maxVel>1.0</maxVel>
              <minDepth>0.00</minDepth>
            </ode>
          </contact>
        </surface>
      </collision>
    </link>
  </xacro:macro>

  <xacro:macro name="wheel_joint" params="prefix reflect number">
    <xacro:robot_wheel prefix="${prefix}" number="${number}"/>
    <joint name="${prefix}_wheel_${number}_joint" type="continuous">
      <parent link="body"/>
      <child link="${prefix}_wheel_${number}"/>
      <axis xyz="0.0 1.0 0.0" rpy="0 0 0"/>
      <origin xyz="${(wheelbase/2 - wheel_radius)*(number-2)*-1} ${((robot_width/2) - (wheel_width/2))*reflect} ${wheel_radius - (robot_height - body_height/2)}"/>
    </joint>
  </xacro:macro>

  <link name="base_link"/>
  <link name="wheel_odom_link"/>

  <link name="body">
    <visual name="body_visual">
      <geometry>  
        <box size="${body_length} ${body_width} ${body_height}"/>
      </geometry>
    </visual>
    <inertial>
      <mass value="${body_mass}"/>
      <xacro:box_inertia m="${body_mass}" x="${body_length}" y="${body_width}" z="${body_height}"/>
    </inertial>
    <collision>
      <geometry>  
        <box size="${body_length} ${body_width} ${body_height}"/>
      </geometry>
    </collision>
  </link>

  <joint name="body_joint" type="fixed">
    <parent link="body"/>
    <child link="base_link"/>
    <origin xyz="0 0 ${-(robot_height - body_height/2)}"/>
  </joint>

  <joint name="wheel_odom_joint" type="fixed">
    <parent link="base_link"/>
    <child link="wheel_odom_link"/>
    <origin xyz="0.0 0.0 ${wheel_radius}" rpy="0.0 0.0 0.0"/>
  </joint>
  
  <!--Create all the wheels and define all the wheel joints-->
  <xacro:wheel_joint prefix="left" reflect="1" number="1"/>
  <xacro:wheel_joint prefix="left" reflect="1" number="2"/>
  <xacro:wheel_joint prefix="left" reflect="1" number="3"/>
  <xacro:wheel_joint prefix="right" reflect="-1" number="1"/>
  <xacro:wheel_joint prefix="right" reflect="-1" number="2"/>
  <xacro:wheel_joint prefix="right" reflect="-1" number="3"/>

  <!--Import the 435 model-->
  <xacro:include filename="$(find realsense2_description)/urdf/_d435.urdf.xacro"/>
  <xacro:arg name="use_nominal_extrinsics" default="True" />

  <!--Define offsets relative to the robot frame-->
  <xacro:property name="d435_cam_mount_from_center_offset" value="0.0149"/>
  <!-- glass cover is 0.1 mm inwards from front aluminium plate -->
  <xacro:property name="glass_to_front" value="0.1e-3"/>
  <!-- see datasheet Revision 007, Fig. 4-4 page 65 -->
  <xacro:property name="zero_depth_to_glass" value="4.2e-3"/>
  <!-- convenience precomputation to avoid clutter-->
  <xacro:property name="d435_offset_x" value="${d435_cam_mount_from_center_offset-glass_to_front-zero_depth_to_glass}"/>
  <xacro:property name="offset_435_y" value="${body_width/2 - 0.2032}"/>
  <xacro:property name="mount_offset_435" value="0.0111125"/>

  <xacro:sensor_d435 parent="body">
    <origin xyz="${body_length/2 + d435_offset_x + mount_offset_435} ${offset_435_y} ${body_height/2 - 0.0254}" rpy="0 0 0"/>
  </xacro:sensor_d435>

  <!--Import the 265 model-->
  <xacro:include filename="$(find realsense2_description)/urdf/_t265.urdf.xacro"/>
  <xacro:property name="t265_width" value="0.10795" />
  <xacro:property name="t265_depth" value="0.0127" />
  <xacro:property name="t265_height" value="0.0254" />
  
  <xacro:sensor_t265 child="body">
    <origin xyz="${-(body_length/2 + t265_depth/2 + 0.0238125)} ${-body_width/2 + 0.1571625 + t265_width/2} ${-body_height/2 + t265_height/2 + 0.0301625}" rpy="0.0 0.0 0.0"/>
  </xacro:sensor_t265>

</robot>
